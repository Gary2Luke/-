#include<iostream>
#include<vector>
using namespace std;


vector<pair<int, double>> dicesSum(int n) {	
	vector<pair<int, double>> res;	//存储结果，为n个骰子的点数和以及相应的概率
	if (n < 1)
		return res;
	vector<vector<long long> > tmp(2, vector<long long>(6 * n + 1, 0));
	int flag = 0;
	for (int i = 1; i <= 6; i++)
		tmp[flag][i] = 1;

	for (int m = 2; m <= n; m++) {		
		for (int i = 0; i < m; i++)
			tmp[1 - flag][i] = 0;

		for (int j = m; j <= 6 * m; j++) {
			tmp[1 - flag][j] = 0;
			for (int k = 1; k <= 6 && k < j; k++)
				tmp[1 - flag][j] += tmp[flag][j - k];
		}
		flag = 1 - flag;
	}
	long long total = pow(6, n);
	double prob = 0;
	for (int i = n; i <= 6 * n; i++) {
		prob = (double)tmp[flag][i] / total;
		res.push_back({ i, prob });
	}
	return res;

}

int main() {
	vector<pair<int, double> > res;
	res = dicesSum(6);
	for (int i = 0; i < res.size(); i++) {
		printf("%d : %.2f\n", res[i].first, res[i].second);
	}	
	system("pause");
	return 0;
}
